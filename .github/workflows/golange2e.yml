name: golangtest

on:
  push:
  workflow_dispatch:
  pull_request:
  schedule:
    - cron: "0 0 * * 0" # https://crontab.guru/#0_0_*_*_0
#defaults:
#  run:
#    working-directory: go

jobs:
  end-to-end:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - run: curl -vsS https://raw.githubusercontent.com/hyperledger/fabric/master/scripts/bootstrap.sh | bash
        name: download fabric sample following official guide
      - run: ./network.sh up
        working-directory: fabric-samples/test-network
        name: set up network
      - run: mkdir -p ../organizations && cp -r ../../fabric-samples/test-network/organizations/* ../organizations/ && ls ../organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
        working-directory: go/test
        name: prepare msp for test
      - run: go test -v ./...
        working-directory: go/test
        name: test
      - run: docker network ls
        working-directory: go/test
        name: check chaincode docker
      - run: docker ps -a
        working-directory: go/test
        name: check chaincode docker
      - run: cat PackageID
        working-directory: go/test
        name: check package id
      #- run: docker build -t basicj_ccaas_image:latest --build-arg CC_SERVER_PORT=9999 .
      #  working-directory: fabric-samples/asset-transfer-basic/chaincode-java
      #  name: build cc image
      - run: docker run --rm -d --name peer0org1_basic --network fabric_test -e CHAINCODE_SERVER_ADDRESS=0.0.0.0:9999 -e CORE_CHAINCODE_ID_NAME=$(cat PackageID) ghcr.io/hyperledgendary/fabric-ccaas-asset-transfer-basic:latest
        working-directory: go/test
        name: run chaincode docker for org1
      - run: docker run --rm -d --name peer0org2_basic --network fabric_test -e CHAINCODE_SERVER_ADDRESS=0.0.0.0:9999 -e CORE_CHAINCODE_ID_NAME=$(cat PackageID) ghcr.io/hyperledgendary/fabric-ccaas-asset-transfer-basic:latest
        working-directory: go/test
        name: run chaincode docker for org2
      - run: docker ps -a
        working-directory: go/test
        name: check chaincode docker
      #- run: go run assetTransfer.go
      #  working-directory: go/test
      #  name: check with abac golang sdk