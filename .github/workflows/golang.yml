name: Golang build

on:
  workflow_call:

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.20'
      - name: Generate test mocks
        run: make generate
      - name: Unit test
        run: make unit-test-go

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.20'
      - name: Generate test mocks
        run: make generate
      - name: Staticcheck
        run: make staticcheck
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          skip-pkg-cache: true

  end-to-end:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - FABRIC_VERSION: '2.5.3'
            CREATE_CHANNEL: 'create_channel'
            CONSENSUS: RAFT
          - FABRIC_VERSION: '2.5.3'
            CREATE_CHANNEL: 'existing_channel'
            CONSENSUS: RAFT
          - FABRIC_VERSION: '3.0.0-preview'
            CREATE_CHANNEL: 'create_channel'
            CONSENSUS: RAFT
          - FABRIC_VERSION: '3.0.0-preview'
            CREATE_CHANNEL: 'existing_channel'
            CONSENSUS: RAFT
          - FABRIC_VERSION: '3.0.0-preview'
            CREATE_CHANNEL: 'create_channel'
            CONSENSUS: BFT
          - FABRIC_VERSION: '3.0.0-preview'
            CREATE_CHANNEL: 'existing_channel'
            CONSENSUS: BFT
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.20'
      - name: run end to end test
        env:
          FABRIC_VERSION: ${{matrix.FABRIC_VERSION}}
          CREATE_CHANNEL: ${{matrix.CREATE_CHANNEL}}
          CONSENSUS: ${{matrix.CONSENSUS}}
        run: ${{ github.workspace }}/.github/scripts/ci.sh
